# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import UserService_pb2 as UserService__pb2


class UserServiceStub(object):
  """Defining a Service, a Service can have multiple RPC operations
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.addUser = channel.unary_unary(
        '/com.anand.grpc.UserService/addUser',
        request_serializer=UserService__pb2.AddUserRequest.SerializeToString,
        response_deserializer=UserService__pb2.AddUserRequest.Response.FromString,
        )
    self.getAllUser = channel.unary_unary(
        '/com.anand.grpc.UserService/getAllUser',
        request_serializer=UserService__pb2.GetAllUserRequest.SerializeToString,
        response_deserializer=UserService__pb2.GetAllUserRequest.Response.FromString,
        )
    self.getAllUserWithStream = channel.unary_stream(
        '/com.anand.grpc.UserService/getAllUserWithStream',
        request_serializer=UserService__pb2.GetAllUserRequest.SerializeToString,
        response_deserializer=UserService__pb2.GetAllUserRequest.Response.FromString,
        )


class UserServiceServicer(object):
  """Defining a Service, a Service can have multiple RPC operations
  """

  def addUser(self, request, context):
    """Define a RPC operation
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getAllUser(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getAllUserWithStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'addUser': grpc.unary_unary_rpc_method_handler(
          servicer.addUser,
          request_deserializer=UserService__pb2.AddUserRequest.FromString,
          response_serializer=UserService__pb2.AddUserRequest.Response.SerializeToString,
      ),
      'getAllUser': grpc.unary_unary_rpc_method_handler(
          servicer.getAllUser,
          request_deserializer=UserService__pb2.GetAllUserRequest.FromString,
          response_serializer=UserService__pb2.GetAllUserRequest.Response.SerializeToString,
      ),
      'getAllUserWithStream': grpc.unary_stream_rpc_method_handler(
          servicer.getAllUserWithStream,
          request_deserializer=UserService__pb2.GetAllUserRequest.FromString,
          response_serializer=UserService__pb2.GetAllUserRequest.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'com.anand.grpc.UserService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
